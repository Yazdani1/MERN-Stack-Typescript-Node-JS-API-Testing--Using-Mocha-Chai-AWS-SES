{
  "stats": {
    "suites": 4,
    "tests": 12,
    "passes": 12,
    "pending": 0,
    "failures": 0,
    "start": "2022-08-12T15:55:57.431Z",
    "end": "2022-08-12T15:55:57.705Z",
    "duration": 274,
    "testsRegistered": 12,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6d2a25b9-78a1-4f62-bcc0-86e23eb92cb4",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 32,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "user = await createUser();\nconsole.log(user.name);",
          "err": {},
          "uuid": "5e2c253d-32bf-4bda-bc84-f1fb5ffc7578",
          "parentUUID": "6d2a25b9-78a1-4f62-bcc0-86e23eb92cb4",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 7,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "user = await createUser();",
          "err": {},
          "uuid": "916b7fb1-0474-4518-8ef1-f1c32fb6a264",
          "parentUUID": "6d2a25b9-78a1-4f62-bcc0-86e23eb92cb4",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a35cd305-5e63-4efa-a0f0-7394d98f708a",
          "title": "Get User",
          "fullFile": "E:\\Mocha Chai Node JS API Testing\\test\\create.js",
          "file": "\\test\\create.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get All The List of Users",
              "fullTitle": "Get User Get All The List of Users",
              "timedOut": false,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.get(API_URL + \"/getuserlist\");\nexpect(response.status).to.equal(200);\nexpect(response.data).to.be.an(\"array\");",
              "err": {},
              "uuid": "f477ff9d-eb6f-4c1b-8802-682e10b73fc3",
              "parentUUID": "a35cd305-5e63-4efa-a0f0-7394d98f708a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Single User",
              "fullTitle": "Get User Get Single User",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.get(API_URL + \"/singleuser/\"+ user._id);\nexpect(response.status).to.equal(200);\nexpect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "c2eb51c4-36ce-4f1a-8e87-e8df90058130",
              "parentUUID": "a35cd305-5e63-4efa-a0f0-7394d98f708a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Single User With All The Fields",
              "fullTitle": "Get User Get Single User With All The Fields",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.get(API_URL + \"/singleuser/\"+ user._id);\nexpect(response.data.name).to.be.equal(\"Noor\");\nresponse.data.should.have.property('name');\nresponse.data.should.have.property('age');\nresponse.data.should.have.property('email');",
              "err": {},
              "uuid": "70fe2d3f-6ccb-4fc8-9177-f639e8b8ae07",
              "parentUUID": "a35cd305-5e63-4efa-a0f0-7394d98f708a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f477ff9d-eb6f-4c1b-8802-682e10b73fc3",
            "c2eb51c4-36ce-4f1a-8e87-e8df90058130",
            "70fe2d3f-6ccb-4fc8-9177-f639e8b8ae07"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 102,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4583a2a7-d40d-4c22-a02f-67834942340d",
          "title": "Create User",
          "fullFile": "E:\\Mocha Chai Node JS API Testing\\test\\create.js",
          "file": "\\test\\create.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create User Correctly",
              "fullTitle": "Create User Create User Correctly",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n      name: \"Muller\",\n      email: \"muller@gmail.com\",\n      age: 45,\n    };\n    const response = await axios.post(API_URL + \"/postuser\", payload);\n    expect(response.status).to.equal(201);\n    expect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "35db992b-ffcd-4e56-bb3e-c4e4e221d227",
              "parentUUID": "4583a2a7-d40d-4c22-a02f-67834942340d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not Create User Without Adding Name",
              "fullTitle": "Create User Should not Create User Without Adding Name",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    \n  const payload = {\n    email: \"muller@gmail.com\",\n    age:45\n  };\n  const response = await axios.post(API_URL + \"/postuser\", payload);\n  expect(response.status).not.to.be.equal(201);\n  expect(response.data).to.be.an(\"object\");\n} catch (error) {\n  if (error.response) {\n    expect(error.response.status).not.to.be.equal(201);\n  } else {\n    throw error;\n  }\n}",
              "err": {},
              "uuid": "e3e8022e-dc71-4bf3-810d-f9815af0484b",
              "parentUUID": "4583a2a7-d40d-4c22-a02f-67834942340d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not Create User Without Adding Email",
              "fullTitle": "Create User Should not Create User Without Adding Email",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const payload = {\n    name: \"Jon kery\",\n    age:45\n  };\n  const response = await axios.post(API_URL + \"/postuser\", payload);\n  expect(response.status).not.to.be.equal(201);\n  expect(response.data).to.be.an(\"object\");\n} catch (error) {\n  if (error.response) {\n    expect(error.response.status).not.to.be.equal(201);\n  } else {\n    throw error;\n  }\n}",
              "err": {},
              "uuid": "840a42c3-a9f4-40a4-8f0a-f7bd408c4e3e",
              "parentUUID": "4583a2a7-d40d-4c22-a02f-67834942340d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not Create user without adding age",
              "fullTitle": "Create User Should not Create user without adding age",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const payload = {\n    name: \"Jon kery\",\n    email: \"muller@gmail.com\",\n    // age:45\n  };\n  const response = await axios.post(API_URL + \"/postuser\", payload);\n  expect(response.status).not.to.be.equal(201);\n  expect(response.data).to.be.an(\"object\");\n} catch (error) {\n  if (error.response) {\n    expect(error.response.status).not.to.be.equal(201);\n  } else {\n    throw error;\n  }\n}",
              "err": {},
              "uuid": "9de96ccd-a018-4732-a5f6-92f6c3be8ace",
              "parentUUID": "4583a2a7-d40d-4c22-a02f-67834942340d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "35db992b-ffcd-4e56-bb3e-c4e4e221d227",
            "e3e8022e-dc71-4bf3-810d-f9815af0484b",
            "840a42c3-a9f4-40a4-8f0a-f7bd408c4e3e",
            "9de96ccd-a018-4732-a5f6-92f6c3be8ace"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 32,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8de29a82-6235-4efa-92e4-eaed611c5232",
          "title": "Delete Single User",
          "fullFile": "E:\\Mocha Chai Node JS API Testing\\test\\create.js",
          "file": "\\test\\create.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Delete user",
              "fullTitle": "Delete Single User Delete user",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.delete(API_URL + \"/deleteuser/\" + user._id);\nexpect(response.status).to.equal(200);\nexpect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "dccb3bfd-534d-4742-9950-7e46246541b4",
              "parentUUID": "8de29a82-6235-4efa-92e4-eaed611c5232",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dccb3bfd-534d-4742-9950-7e46246541b4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0e9364fb-2759-4f7f-992e-c23689bdab12",
          "title": "Update User",
          "fullFile": "E:\\Mocha Chai Node JS API Testing\\test\\update.js",
          "file": "\\test\\update.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Update User Correctly",
              "fullTitle": "Update User Update User Correctly",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.put(API_URL + \"/updateuser/\" + user._id, {\n  name: \"Noor to yaz updated\",\n  email: \"noor_updated@gmail.com\",\n  age: 15,\n});\nexpect(response.status).to.be.equal(200);\nexpect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "b00a5504-36db-4b48-bec3-6233e36a123a",
              "parentUUID": "0e9364fb-2759-4f7f-992e-c23689bdab12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update User Name Correctly",
              "fullTitle": "Update User Update User Name Correctly",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.put(API_URL + \"/updateuser/\" + user._id, {\n  name: \"Noor to yaz updated\",\n});\nexpect(response.status).to.be.equal(200);\nexpect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "5c8e080b-1dc5-45c9-a62a-2f01aff8fdb9",
              "parentUUID": "0e9364fb-2759-4f7f-992e-c23689bdab12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update User Age Correctly",
              "fullTitle": "Update User Update User Age Correctly",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.put(API_URL + \"/updateuser/\" + user._id, {\n  age: 52,\n});\nexpect(response.status).to.be.equal(200);\nexpect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "2b1814eb-6094-4632-80d0-5be32d4bcd0e",
              "parentUUID": "0e9364fb-2759-4f7f-992e-c23689bdab12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update User Correctly With Wrong User ID",
              "fullTitle": "Update User Update User Correctly With Wrong User ID",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const response = await axios.put(API_URL + \"/updateuser/\" + 45, {\n    name: \"Noor to yaz updated\",\n    email: \"noor_updated@gmail.com\",\n    age: 15,\n  });\n  expect(response.status).not.to.be.equal(200);\n  expect(response.data).to.be.an(\"object\");\n} catch (error) {\n  if (error.response) {\n    expect(error.response.status).not.to.be.equal(200);\n  } else {\n    throw error;\n  }\n}",
              "err": {},
              "uuid": "2f48d63b-0e4f-407e-97f3-591a4ea4facd",
              "parentUUID": "0e9364fb-2759-4f7f-992e-c23689bdab12",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b00a5504-36db-4b48-bec3-6233e36a123a",
            "5c8e080b-1dc5-45c9-a62a-2f01aff8fdb9",
            "2b1814eb-6094-4632-80d0-5be32d4bcd0e",
            "2f48d63b-0e4f-407e-97f3-591a4ea4facd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 44,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}